{"ast":null,"code":"var _jsxFileName = \"/Users/jayanichakravarti/Documents/GitHub/dictionary-react/src/Dictionary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Results from \"./Results\";\nimport \"./Dictionary.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dictionary() {\n  _s();\n\n  let [keyword, setKeyword] = useState(\"\");\n  let [results, setResults] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n\n  function handleResponse(response) {\n    setResults(response.data[0]);\n  }\n\n  function search() {\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dictionary\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            placeholder: \"What word do you want to look up?\",\n            onChange: handleKeywordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Results, {\n        results: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 1\n    }, this);\n  } else {\n    load();\n    return \"Loading\";\n  }\n}\n\n_s(Dictionary, \"fQqmZB/Lku/fLnq+kpRtdywIyn8=\");\n\n_c = Dictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"sources":["/Users/jayanichakravarti/Documents/GitHub/dictionary-react/src/Dictionary.js"],"names":["React","useState","Results","axios","Dictionary","keyword","setKeyword","results","setResults","loaded","setLoaded","handleResponse","response","data","search","apiUrl","get","then","handleSubmit","event","preventDefault","handleKeywordChange","target","value","load"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAApC;AACA,MAAI,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAApC;AACA,MAAI,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAAlC;;AAEA,WAASU,cAAT,CAAwBC,QAAxB,EAAkC;AAC9BJ,IAAAA,UAAU,CAACI,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAD,CAAV;AACH;;AAGL,WAASC,MAAT,GAAkB;AACjB,QAAIC,MAAM,GAAG,sDAAqDV,OAAQ,EAA1E;AACOF,IAAAA,KAAK,CAACa,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBN,cAAvB;AACP;;AACG,WAASO,YAAT,CAAsBC,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACAN,IAAAA,MAAM;AACT;;AAED,WAASO,mBAAT,CAA6BF,KAA7B,EAAoC;AAChCb,IAAAA,UAAU,CAACa,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAV;AACH;;AAED,MAAId,MAAJ,EAAY;AAChB,wBACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAA,+BACJ;AAAM,UAAA,QAAQ,EAAES,YAAhB;AAAA,iCACI;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,WAAW,EAAC,mCAAjC;AAAqE,YAAA,QAAQ,EAAEG;AAA/E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,cADJ,eAMA,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEd;AAAlB;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAYK,GAbD,MAaO;AACHiB,IAAAA,IAAI;AACJ,WAAO,SAAP;AACH;AAEJ;;GAzCuBpB,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\";\nimport Results from \"./Results\";\nimport \"./Dictionary.css\";\nimport axios from \"axios\";\n\n\nexport default function Dictionary() {\n    let [keyword, setKeyword] = useState(\"\");\n    let [results, setResults] = useState(null);\n    let [loaded, setLoaded] = useState(false);\n\n    function handleResponse(response) {\n        setResults(response.data[0]);\n    }\n\n\nfunction search() {\n let apiUrl =`https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n        axios.get(apiUrl).then(handleResponse);\n}\n    function handleSubmit(event) {\n        event.preventDefault();\n        search();\n    }\n\n    function handleKeywordChange(event) {\n        setKeyword(event.target.value);\n    }\n\n    if (loaded) {\nreturn (\n<div className=\"Dictionary\">\n    <section>\n<form onSubmit={handleSubmit}>\n    <input type=\"search\" placeholder=\"What word do you want to look up?\" onChange={handleKeywordChange} />\n</form>\n</section>\n<Results results={results}/>\n\n</div>\n\n    )\n    } else {\n        load();\n        return \"Loading\";\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}