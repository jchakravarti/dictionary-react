{"ast":null,"code":"var _jsxFileName = \"/Users/jayanichakravarti/Documents/GitHub/dictionary-react/src/Dictionary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Results from \"./Results\";\nimport Photos from \"./Photos\";\nimport \"./Dictionary.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dictionary(props) {\n  _s();\n\n  let [keyword, setKeyword] = useState(props.defaultKeyword);\n  let [results, setResults] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n  let [photos, setPhotos] = useState(null);\n\n  function handleResponse(response) {\n    setResults(response.data[0]);\n  }\n\n  function search() {\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n    axios.get(apiUrl).then(handleResponse);\n    let pexelsApiKey = \"563492ad6f917000010000019da5265f07254e0fbe3176757a94b6d5\";\n    let pexelsApiUrl = `https://api.pexels.com/v1/search?query=${keyword}&per_page=1`;\n    let headers = {\n      Authorization: `Bearer ${pexelsApiKey}`\n    };\n    axios.get(pexelsApiUrl, {\n      headers: headers\n    }).then(handlePexelsResponse);\n  }\n\n  function load() {\n    setLoaded(true);\n    search();\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handlePexelsResponse(response) {\n    setPhotos(response.data.photos);\n  }\n\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dictionary\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" What word do you want to look up?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            onChange: handleKeywordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions\",\n          children: \"Get definitions, synonyms and more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Results, {\n        results: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Photos, {\n        photos: photos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 1\n    }, this);\n  } else {\n    load();\n    return \"Loading\";\n  }\n}\n\n_s(Dictionary, \"TT3J1uaojU+t1KTPqOCWlvWuEBk=\");\n\n_c = Dictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"sources":["/Users/jayanichakravarti/Documents/GitHub/dictionary-react/src/Dictionary.js"],"names":["React","useState","Results","Photos","axios","Dictionary","props","keyword","setKeyword","defaultKeyword","results","setResults","loaded","setLoaded","photos","setPhotos","handleResponse","response","data","search","apiUrl","get","then","pexelsApiKey","pexelsApiUrl","headers","Authorization","handlePexelsResponse","load","handleSubmit","event","preventDefault","handleKeywordChange","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACK,KAAK,CAACG,cAAP,CAApC;AACA,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAApC;AACA,MAAI,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,IAAD,CAAlC;;AAEA,WAASe,cAAT,CAAwBC,QAAxB,EAAkC;AAC9BN,IAAAA,UAAU,CAACM,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAD,CAAV;AACH;;AAGL,WAASC,MAAT,GAAkB;AACjB,QAAIC,MAAM,GAAG,sDAAqDb,OAAQ,EAA1E;AACOH,IAAAA,KAAK,CAACiB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBN,cAAvB;AAEA,QAAIO,YAAY,GAAG,0DAAnB;AACA,QAAIC,YAAY,GAAI,0CAAyCjB,OAAQ,aAArE;AACA,QAAIkB,OAAO,GAAG;AAAEC,MAAAA,aAAa,EAAG,UAASH,YAAa;AAAxC,KAAd;AACAnB,IAAAA,KAAK,CAACiB,GAAN,CAAUG,YAAV,EAAwB;AAACC,MAAAA,OAAO,EAAEA;AAAV,KAAxB,EAA4CH,IAA5C,CAAiDK,oBAAjD;AACP;;AAED,WAASC,IAAT,GAAgB;AACZf,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAM,IAAAA,MAAM;AACT;;AACG,WAASU,YAAT,CAAsBC,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACAZ,IAAAA,MAAM;AACT;;AAED,WAASQ,oBAAT,CAA8BV,QAA9B,EAAwC;AAC5CF,IAAAA,SAAS,CAACE,QAAQ,CAACC,IAAT,CAAcJ,MAAf,CAAT;AACK;;AACD,WAASkB,mBAAT,CAA6BF,KAA7B,EAAoC;AAChCtB,IAAAA,UAAU,CAACsB,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAV;AACH;;AAED,MAAItB,MAAJ,EAAY;AAChB,wBACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEJ;AAAM,UAAA,QAAQ,EAAEiB,YAAhB;AAAA,iCACI;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,QAAQ,EAAEG;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFI,eAKJ;AAAK,UAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALI;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQA,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEtB;AAAlB;AAAA;AAAA;AAAA;AAAA,cARA,eASA,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEI;AAAhB;AAAA;AAAA;AAAA;AAAA,cATA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAeK,GAhBD,MAgBO;AACHc,IAAAA,IAAI;AACJ,WAAO,SAAP;AACH;AAEJ;;GA1DuBvB,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\";\nimport Results from \"./Results\";\nimport Photos from \"./Photos\";\nimport \"./Dictionary.css\";\nimport axios from \"axios\";\n\n\nexport default function Dictionary(props) {\n    let [keyword, setKeyword] = useState(props.defaultKeyword);\n    let [results, setResults] = useState(null);\n    let [loaded, setLoaded] = useState(false);\n    let [photos, setPhotos] = useState(null);\n\n    function handleResponse(response) {\n        setResults(response.data[0]);\n    }\n\n\nfunction search() {\n let apiUrl =`https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n        axios.get(apiUrl).then(handleResponse);\n\n        let pexelsApiKey = \"563492ad6f917000010000019da5265f07254e0fbe3176757a94b6d5\";\n        let pexelsApiUrl = `https://api.pexels.com/v1/search?query=${keyword}&per_page=1`;\n        let headers = { Authorization: `Bearer ${pexelsApiKey}`};\n        axios.get(pexelsApiUrl, {headers: headers}).then(handlePexelsResponse);\n}\n\nfunction load() {\n    setLoaded(true);\n    search();\n}\n    function handleSubmit(event) {\n        event.preventDefault();\n        search();\n    }\n\n    function handlePexelsResponse(response) {\nsetPhotos(response.data.photos);\n    }\n    function handleKeywordChange(event) {\n        setKeyword(event.target.value);\n    }\n\n    if (loaded) {\nreturn (\n<div className=\"Dictionary\">\n    <section>\n        <h1> What word do you want to look up?</h1>\n<form onSubmit={handleSubmit}>\n    <input type=\"search\" onChange={handleKeywordChange} />\n</form>\n<div className= \"suggestions\">Get definitions, synonyms and more</div>\n</section>\n<Results results={results}/>\n<Photos photos={photos} />\n\n</div>\n\n    )\n    } else {\n        load();\n        return \"Loading\";\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}